variables:
- &platforms linux/amd64,linux/arm64,linux/riscv64
- &image woodpeckerci/plugin-docker-buildx
- &kubernetes_tag 'v1.30.1'
- &maintainers 'Mateusz Urbanek <mateusz.urbanek.98@gmail.com>'
- logins: &logins
  - registry: https://ghcr.io/
    username: shanduur-auto
    password:
      from_secret: ghcr-token
- &backend_options
  kubernetes:
    securityContext:
      privileged: true
- &path_event
  include:
    - '.woodpecker/kube.yaml'
    - 'containers/kubernetes/*'

when:
- event: push
  branch: main
- event: manual

clone:
  git:
    image: woodpeckerci/plugin-git
    settings:
      recursive: false

steps:
  submodule:
    image: woodpeckerci/plugin-git
    commands:
    - git submodule update --init --depth=1 containers/kubernetes/src

  kubelet:
    image: *image
    privileged: true
    settings:
      dockerfile: ./containers/kubernetes/Dockerfile
      context: ./containers/kubernetes
      registry: ghcr.io
      repo: ghcr.io/anza-labs/kubelet
      logins:
      - <<: *logins
      platforms: *platforms
      tags: *kubernetes_tag
      build_args_from_env:
      - MAINTAINERS
      - VERSION
      build_args:
      - BIN=kubelet
    environment:
      MAINTAINERS: *maintainers
      VERSION: *kubernetes_tag
    backend_options:
      <<: *backend_options
    when:
    - path:
        <<: *path_event

  kube-controller-manager:
    image: *image
    privileged: true
    settings:
      dockerfile: ./containers/kubernetes/Dockerfile
      context: ./containers/kubernetes
      registry: ghcr.io
      repo: ghcr.io/anza-labs/kube-controller-manager
      logins:
      - <<: *logins
      platforms: *platforms
      tags: *kubernetes_tag
      build_args_from_env:
      - MAINTAINERS
      - VERSION
      build_args:
      - BIN=kube-controller-manager
    environment:
      MAINTAINERS: *maintainers
      VERSION: *kubernetes_tag
    backend_options:
      <<: *backend_options
    when:
    - path:
        <<: *path_event

  kube-apiserver:
    image: *image
    privileged: true
    settings:
      dockerfile: ./containers/kubernetes/Dockerfile
      context: ./containers/kubernetes
      registry: ghcr.io
      repo: ghcr.io/anza-labs/kube-apiserver
      logins:
      - <<: *logins
      platforms: *platforms
      tags: *kubernetes_tag
      build_args_from_env:
      - MAINTAINERS
      - VERSION
      build_args:
      - BIN=kube-apiserver
    environment:
      MAINTAINERS: *maintainers
      VERSION: *kubernetes_tag
    backend_options:
      <<: *backend_options
    when:
    - path:
        <<: *path_event

  kube-scheduler:
    image: *image
    privileged: true
    settings:
      dockerfile: ./containers/kubernetes/Dockerfile
      context: ./containers/kubernetes
      registry: ghcr.io
      repo: ghcr.io/anza-labs/kube-scheduler
      logins:
      - <<: *logins
      platforms: *platforms
      tags: *kubernetes_tag
      build_args_from_env:
      - MAINTAINERS
      - VERSION
      build_args:
      - BIN=kube-scheduler
    environment:
      MAINTAINERS: *maintainers
      VERSION: *kubernetes_tag
    backend_options:
      <<: *backend_options
    when:
    - path:
        <<: *path_event

  kube-proxy:
    image: *image
    privileged: true
    settings:
      dockerfile: ./containers/kubernetes/Dockerfile
      context: ./containers/kubernetes
      registry: ghcr.io
      repo: ghcr.io/anza-labs/kube-proxy
      logins:
      - <<: *logins
      platforms: *platforms
      tags: *kubernetes_tag
      build_args_from_env:
      - MAINTAINERS
      - VERSION
      build_args:
      - BIN=kube-proxy
    environment:
      MAINTAINERS: *maintainers
      VERSION: *kubernetes_tag
    backend_options:
      <<: *backend_options
    when:
    - path:
        <<: *path_event
